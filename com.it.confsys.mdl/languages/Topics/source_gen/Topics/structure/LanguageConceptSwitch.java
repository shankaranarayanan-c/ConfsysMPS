package Topics.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Conference = 0;
  public static final int DurationTopic = 1;
  public static final int LightningTopic = 2;
  public static final int Topic = 3;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xda1db77ac2614742L, 0xa032c8bcb93769c9L);
    builder.put(0x2e23a5d8c824d96eL, Conference);
    builder.put(0x2e23a5d8c824c93bL, DurationTopic);
    builder.put(0x2e23a5d8c824d14aL, LightningTopic);
    builder.put(0x2e23a5d8c824c6c7L, Topic);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
